/*! jQuery klass v0.1a - Jean-Louis Grall - MIT license - http://code.google.com/p/jquery-klass-plugin */

(function($,undefined){var
config={ext:{}},parseArgs=config.parseArgs=function(options,args){options.fields=args.pop()||{};options._super=args.pop()||undefined;return options;},filter=config.filter={_klass:true},set=config.set={init:function(_super,klass){var proto=makeObjectPrototype(_super,klass);set.field(klass,proto,"init",klass);return klass;},_klass:function(klass,proto,name,value){klass[name]=value;},ext_klass:function(method,extend_klass){return method._klass=$.extend(method._klass,extend_klass);},field:function(klass,proto,name,value){return $.isFunction(proto[name]=value)&&set.ext_klass(value,{klass:klass,name:name});},each:function(klass,proto,funcName,obj,options){for(var key in obj)set[funcName](klass,proto,key,obj[key]);}},exec=config.exec=[],Array_slice=exec.slice,$klass=$.klass=function(){var
options=config.parseArgs({},Array_slice.call(arguments)),_super=options._super,fields=options.fields,klass,proto,key,i=-1,setName,makeKlass=function(){if(++i<exec.length)exec[i](options,makeKlass);else{if(klass)console.log("klass already made !");klass=fields.init=set.init(_super||$klass,fields.init);proto=klass.prototype;klass._super=_super;set.each(klass,proto,"field",fields);for(key in filter){if(filter[key]){setName=filter[key]===true?key:filter[key];set.each(klass,proto,setName,options[key]);}}}
while(i<exec.length)makeKlass();return klass;};for(key in filter){if(fields[key])options[key]=fields[key];delete fields[key];}
if(!fields.init)fields.init=function(){if(_super)_super.prototype.init.apply(this,arguments);};return makeKlass();},protoChainingProxy=function(){},chainPrototype=$klass.chainPrototype=function(proto){protoChainingProxy.prototype=proto;return new protoChainingProxy();},makeObjectPrototype=$klass.makeObjectPrototype=function(baseObj,newObj){var proto=newObj.prototype=chainPrototype(baseObj.prototype);proto.constructor=newObj;return proto;},$proto=config.proto=$klass.prototype;$proto._super=function(arg1,arg2){var arg1IsArguments=arg1.callee,_klass=(arg1IsArguments?arg1:arg2).callee._klass,name=arg1IsArguments?_klass.name:arg1,superMethod=_klass.klass._super.prototype[name];return superMethod.apply(this,Array_slice.call(arguments,1+(!arg1IsArguments)));};$klass.config=config;})(jQuery);